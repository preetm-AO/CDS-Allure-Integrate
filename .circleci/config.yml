version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9 # Start with the official Python 3.9 image

    steps:
      - checkout # Checkout the code from the repo

      # Create and activate Python virtual environment
      - run:
          name: Install Python dependencies
          command: |
            python -m venv venv  # Create the virtual environment
            source venv/bin/activate  # Activate virtual environment
            pip install -r requirements.txt  # Install all dependencies

      # Run pytest tests and store results in allure-results directory
      - run:
          name: Run pytest tests
          command: |
            source venv/bin/activate  # Activate virtual environment
            pytest

      # Generate Allure report in root directory
      - run:
          when: always
          name: Generate Allure report using Allure CLI
          command: |
            # git checkout allure-report
            # # allure generate allure-results --clean -o docs/  # Generate report in root directory
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk npm
            sudo npm install -g allure-commandline --save-dev
            echo "export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $BASH_ENV
            echo "export PATH=$JAVA_HOME/bin:$PATH" >> $BASH_ENV
            java -version
            npm --version
            allure --version
            allure generate --clean -o logs/allure-report
      - store_artifacts:
        path: logs/allure-report

      # - run:
      #     name: Push Allure report to GitHub
      #     when: always # This ensures the job runs always
      #     command: |
      #       echo ${PWD}
      #       ls -a
      #       # Configure Git with CircleCI user details
      #       git config --global user.name "circleci"
      #       git config --global user.email "circleci@yourdomain.com"

      #       # Set the GitHub remote URL to use HTTPS with token
      #       git remote set-url origin https://$GH_TOKEN@github.com/preetm-AO/CDS-Allure-Integrate.git
      #       # Add, commit, and push the changes
      #       git add . # Add the generated Allure report files (assumed to be HTML)
      #       git commit -m "Update Allure report"
      #       git push origin allure-report

      # Store generated Allure report as CircleCI artifact
      # - store_artifacts:
      #     path: allure-report # You might need to adjust this if you're generating the report in the root

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
